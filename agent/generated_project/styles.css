/*
   VividTodo – Visual Design
   -------------------------------------------------
   This stylesheet defines a vibrant, accessible, and responsive UI
   for the VividTodo application.
*/

/* -------------------------------------------------
   1. Color Theme – CSS Variables
   ------------------------------------------------- */
:root {
  /* Primary vibrant hue (coral) */
  --primary: #ff6f61;
  /* Accent hue (amber) */
  --accent: #ffb400;
  /* Light background for containers */
  --bg: #ffffff;
  /* Dark text for readability */
  --text: #2c2c2c;
  /* Border / subtle shadows */
  --border: #e0e0e0;
  /* Transition timing */
  --transition-duration: 0.3s;
}

/* -------------------------------------------------
   2. Global Styles & Layout
   ------------------------------------------------- */
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  background: linear-gradient(135deg, var(--primary), var(--accent));
  color: var(--text);
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 2rem 0;
}

/* -------------------------------------------------
   3. #app Container
   ------------------------------------------------- */
#app {
  background: var(--bg);
  max-width: 600px;
  width: 90%;
  padding: 1.5rem;
  border-radius: 0.75rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* -------------------------------------------------
   4. Header – Title & New‑Todo Input
   ------------------------------------------------- */
header.header {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

header h1 {
  margin: 0;
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--primary);
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.15);
}

#new-todo {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border: 2px solid var(--border);
  border-radius: 0.5rem;
  background: #fafafa;
  color: var(--text);
  transition: border-color var(--transition-duration) ease, box-shadow var(--transition-duration) ease;
}

#new-todo::placeholder {
  color: #999;
  opacity: 1; /* ensure consistent appearance across browsers */
}

#new-todo:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(255, 111, 97, 0.3);
}

/* -------------------------------------------------
   5. Toolbar – Filter Buttons
   ------------------------------------------------- */
.toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.5rem;
}

.filter-btn {
  background: transparent;
  border: 2px solid var(--primary);
  color: var(--primary);
  border-radius: 0.4rem;
  padding: 0.4rem 0.9rem;
  font-size: 0.95rem;
  cursor: pointer;
  transition: background var(--transition-duration) ease, color var(--transition-duration) ease, transform var(--transition-duration) ease;
}

.filter-btn:hover {
  background: var(--accent);
  color: #fff;
  transform: translateY(-2px);
}

.filter-btn.active,
.filter-btn[aria-pressed="true"] {
  background: var(--primary);
  color: #fff;
}

/* -------------------------------------------------
   6. Todo List & Items
   ------------------------------------------------- */
.todo-list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.todo-item {
  background: #f9f9f9;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  padding: 0.75rem 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: background var(--transition-duration) ease, transform var(--transition-duration) ease, opacity var(--transition-duration) ease;
  cursor: grab;
}

.todo-item:hover {
  background: #fff;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
}

.todo-item.dragging {
  opacity: 0.5;
  transform: scale(0.97);
  cursor: grabbing;
}

.todo-item.placeholder {
  background: var(--accent);
  opacity: 0.2;
  border: 2px dashed var(--primary);
  height: 2.5rem;
}

.todo-item.completed {
  text-decoration: line-through;
  color: #777;
  opacity: 0.7;
}

/* -------------------------------------------------
   7. Footer – Clear Completed Button
   ------------------------------------------------- */
footer.footer {
  display: flex;
  justify-content: flex-end;
}

#clear-completed {
  background: var(--primary);
  color: #fff;
  border: none;
  border-radius: 0.4rem;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background var(--transition-duration) ease, transform var(--transition-duration) ease;
}

#clear-completed:hover {
  background: var(--accent);
  transform: translateY(-2px);
}

/* -------------------------------------------------
   8. Accessibility – Focus Styles
   ------------------------------------------------- */
button:focus,
#new-todo:focus {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* -------------------------------------------------
   9. Responsive Adjustments (≤ 600px)
   ------------------------------------------------- */
@media (max-width: 600px) {
  header h1 {
    font-size: 2rem;
  }

  #new-todo {
    font-size: 0.95rem;
    padding: 0.6rem 0.9rem;
  }

  .filter-btn {
    padding: 0.35rem 0.7rem;
    font-size: 0.85rem;
  }

  #clear-completed {
    padding: 0.4rem 0.8rem;
    font-size: 0.8rem;
  }
}

/* -------------------------------------------------
   10. Animations – Adding / Removing Items
   ------------------------------------------------- */
.todo-item {
  animation: fadeIn var(--transition-duration) ease forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* When an item is removed, the script can add the .removing class */
.todo-item.removing {
  animation: fadeOut var(--transition-duration) ease forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(10px);
  }
}
